#&nbsp;-*-&nbsp;encoding:&nbsp;utf-8&nbsp;-*-<br />#&nbsp;written&nbsp;in&nbsp;python&nbsp;2.7<br />__author__&nbsp;=&nbsp;'garzon'<br /><br />import&nbsp;pickle<br />import&nbsp;hashlib,&nbsp;json,&nbsp;rsa,&nbsp;uuid,&nbsp;os<br />from&nbsp;flask&nbsp;import&nbsp;Flask,&nbsp;session,&nbsp;redirect,&nbsp;url_for,&nbsp;escape,&nbsp;request<br /><br />app&nbsp;=&nbsp;Flask(__name__)<br />app.secret_key&nbsp;=&nbsp;'*********************'<br />url_prefix&nbsp;=&nbsp;'/6af948d659f0b7c5d3950a'<br /><br />def&nbsp;FLAG():<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'Here&nbsp;is&nbsp;your&nbsp;flag:&nbsp;*ctf{******************}'<br /><br />def&nbsp;hash(x):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;hashlib.sha256(hashlib.md5(x).digest()).hexdigest()<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;hash_reducer(x,&nbsp;y):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;hash(hash(x)+hash(y))<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;has_attrs(d,&nbsp;attrs):<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(d)&nbsp;!=&nbsp;type({}):&nbsp;raise&nbsp;Exception("Input&nbsp;should&nbsp;be&nbsp;a&nbsp;dict/JSON")<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;attr&nbsp;in&nbsp;attrs:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;attr&nbsp;not&nbsp;in&nbsp;d:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;Exception("{}&nbsp;should&nbsp;be&nbsp;presented&nbsp;in&nbsp;the&nbsp;input".format(attr))<br /><br />EMPTY_HASH&nbsp;=&nbsp;'0'*64<br /><br />def&nbsp;addr_to_pubkey(address):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rsa.PublicKey(int(address,&nbsp;16),&nbsp;65537)<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;pubkey_to_address(pubkey):<br />&nbsp;&nbsp;&nbsp;&nbsp;assert&nbsp;pubkey.e&nbsp;==&nbsp;65537<br />&nbsp;&nbsp;&nbsp;&nbsp;hexed&nbsp;=&nbsp;hex(pubkey.n)<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hexed.endswith('L'):&nbsp;hexed&nbsp;=&nbsp;hexed[:-1]<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;hexed.startswith('0x'):&nbsp;hexed&nbsp;=&nbsp;hexed[2:]<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;hexed<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;gen_addr_key_pair():<br />&nbsp;&nbsp;&nbsp;&nbsp;pubkey,&nbsp;privkey&nbsp;=&nbsp;rsa.newkeys(384)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;pubkey_to_address(pubkey),&nbsp;privkey<br /><br />bank_address,&nbsp;bank_privkey&nbsp;=&nbsp;gen_addr_key_pair()<br />hacker_address,&nbsp;hacker_privkey&nbsp;=&nbsp;gen_addr_key_pair()<br /><br />def&nbsp;sign_input_utxo(input_utxo_id,&nbsp;privkey):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rsa.sign(input_utxo_id,&nbsp;privkey,&nbsp;'SHA-1').encode('hex')<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;hash_utxo(utxo):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;reduce(hash_reducer,&nbsp;[utxo['id'],&nbsp;utxo['addr'],&nbsp;str(utxo['amount'])])<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;create_output_utxo(addr_to,&nbsp;amount):<br />&nbsp;&nbsp;&nbsp;&nbsp;utxo&nbsp;=&nbsp;{'id':&nbsp;str(uuid.uuid4()),&nbsp;'addr':&nbsp;addr_to,&nbsp;'amount':&nbsp;amount}<br />&nbsp;&nbsp;&nbsp;&nbsp;utxo['hash']&nbsp;=&nbsp;hash_utxo(utxo)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;utxo<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;hash_tx(tx):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;reduce(hash_reducer,&nbsp;[<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reduce(hash_reducer,&nbsp;tx['input'],&nbsp;EMPTY_HASH),<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reduce(hash_reducer,&nbsp;[utxo['hash']&nbsp;for&nbsp;utxo&nbsp;in&nbsp;tx['output']],&nbsp;EMPTY_HASH)<br />&nbsp;&nbsp;&nbsp;&nbsp;])<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;create_tx(input_utxo_ids,&nbsp;output_utxo,&nbsp;privkey_from=None):<br />&nbsp;&nbsp;&nbsp;&nbsp;tx&nbsp;=&nbsp;{'input':&nbsp;input_utxo_ids,&nbsp;'signature':&nbsp;[sign_input_utxo(id,&nbsp;privkey_from)&nbsp;for&nbsp;id&nbsp;in&nbsp;input_utxo_ids],&nbsp;'output':&nbsp;output_utxo}<br />&nbsp;&nbsp;&nbsp;&nbsp;tx['hash']&nbsp;=&nbsp;hash_tx(tx)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;tx<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;hash_block(block):<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;reduce(hash_reducer,&nbsp;[block['prev'],&nbsp;block['nonce'],&nbsp;reduce(hash_reducer,&nbsp;[tx['hash']&nbsp;for&nbsp;tx&nbsp;in&nbsp;block['transactions']],&nbsp;EMPTY_HASH)])<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;create_block(prev_block_hash,&nbsp;nonce_str,&nbsp;transactions):<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(prev_block_hash)&nbsp;==&nbsp;type(u''):&nbsp;prev_block_hash&nbsp;=&nbsp;str(prev_block_hash)<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(prev_block_hash)&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception('prev_block_hash&nbsp;should&nbsp;be&nbsp;hex-encoded&nbsp;hash&nbsp;value')<br />&nbsp;&nbsp;&nbsp;&nbsp;nonce&nbsp;=&nbsp;str(nonce_str)<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(nonce)&nbsp;&gt;&nbsp;128:&nbsp;raise&nbsp;Exception('the&nbsp;nonce&nbsp;is&nbsp;too&nbsp;long')<br />&nbsp;&nbsp;&nbsp;&nbsp;block&nbsp;=&nbsp;{'prev':&nbsp;prev_block_hash,&nbsp;'nonce':&nbsp;nonce,&nbsp;'transactions':&nbsp;transactions}<br />&nbsp;&nbsp;&nbsp;&nbsp;block['hash']&nbsp;=&nbsp;hash_block(block)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;block<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;find_blockchain_tail(blocks=None):<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;blocks&nbsp;is&nbsp;None:&nbsp;blocks&nbsp;=&nbsp;session['blocks']<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;max(blocks.values(),&nbsp;key=lambda&nbsp;block:&nbsp;block['height'])<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />class&nbsp;SRC20SmartContract:<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;addr,&nbsp;privkey):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.starTokenNum&nbsp;=&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.balanceOfAddr&nbsp;=&nbsp;{addr:&nbsp;999999999}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.addr&nbsp;=&nbsp;addr<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.privkey&nbsp;=&nbsp;privkey<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.owned_token_utxos&nbsp;=&nbsp;{}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;onCall_withdraw(self,&nbsp;tx):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;by&nbsp;calling&nbsp;this&nbsp;you&nbsp;can&nbsp;convert&nbsp;your&nbsp;StarTokens&nbsp;into&nbsp;StarCoins!<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(tx['input'])&nbsp;==&nbsp;1&nbsp;and&nbsp;len(tx['output'])&nbsp;==&nbsp;1&nbsp;and&nbsp;len(tx['signature'])&nbsp;==&nbsp;0&nbsp;and&nbsp;tx['input'][0]&nbsp;in&nbsp;self.owned_token_utxos:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;which&nbsp;means&nbsp;that&nbsp;you&nbsp;would&nbsp;like&nbsp;to&nbsp;redeem&nbsp;StarCoins&nbsp;in&nbsp;the&nbsp;input&nbsp;utxo&nbsp;using&nbsp;your&nbsp;StarTokens<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recv_addr&nbsp;=&nbsp;tx['output'][0]['addr']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount_to_redeem&nbsp;=&nbsp;self.owned_token_utxos[tx['input'][0]]['amount']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.sendTokenAtTx(tx,&nbsp;recv_addr,&nbsp;self.addr,&nbsp;amount_to_redeem)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx['signature'].append(sign_input_utxo(tx['input'][0],&nbsp;self.privkey))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;onCall_buyTokens(self,&nbsp;utxos,&nbsp;tx):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;by&nbsp;calling&nbsp;this&nbsp;you&nbsp;can&nbsp;buy&nbsp;some&nbsp;StarTokens&nbsp;using&nbsp;StarCoins!<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(tx['input'])&nbsp;==&nbsp;1&nbsp;and&nbsp;len(tx['output'])&nbsp;==&nbsp;1&nbsp;and&nbsp;tx['output'][0]['addr']&nbsp;==&nbsp;self.addr:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.sendTokenAtTx(tx,&nbsp;self.addr,&nbsp;utxos[tx['input'][0]]['addr'],&nbsp;tx['output'][0]['amount'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;getTokenBalance(self,&nbsp;addr):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;addr&nbsp;not&nbsp;in&nbsp;self.balanceOfAddr:&nbsp;return&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;self.balanceOfAddr[addr]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;sendTokenAtTx(self,&nbsp;tx,&nbsp;from_addr,&nbsp;to_addr,&nbsp;amount):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;self.getTokenBalance(from_addr)&nbsp;&lt;&nbsp;amount:&nbsp;raise&nbsp;Exception("no&nbsp;enough&nbsp;StarToken&nbsp;at&nbsp;"&nbsp;+&nbsp;from_addr)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;to_addr&nbsp;==&nbsp;self.addr:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from_addr,&nbsp;to_addr&nbsp;=&nbsp;to_addr,&nbsp;from_addr<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;amount&nbsp;=&nbsp;-amount<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utxo_used_to_record_SRCToken&nbsp;=&nbsp;create_output_utxo(to_addr,&nbsp;0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj&nbsp;=&nbsp;{'utxo_id':&nbsp;utxo_used_to_record_SRCToken['id'],&nbsp;'tokenNum':&nbsp;amount}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;payload&nbsp;=&nbsp;json.dumps(obj)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signature&nbsp;=&nbsp;self.signSRCTokenUtxoPayload(payload)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info&nbsp;=&nbsp;signature&nbsp;+&nbsp;'$$$'&nbsp;+&nbsp;payload<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utxo_used_to_record_SRCToken['extra']&nbsp;=&nbsp;info<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx['output'].append(utxo_used_to_record_SRCToken)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;signSRCTokenUtxoPayload(self,&nbsp;payload):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rsa.sign(payload,&nbsp;self.privkey,&nbsp;'SHA-1').encode('hex')<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;verifySRCTokenUtxoPayload(self,&nbsp;payload,&nbsp;signature):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rsa.verify(payload,&nbsp;signature.decode('hex'),&nbsp;addr_to_pubkey(self.addr))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;extractInfoFromUtxos(self,&nbsp;utxos):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo_id,&nbsp;utxo&nbsp;in&nbsp;utxos.items():<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'extra'&nbsp;in&nbsp;utxo:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info&nbsp;=&nbsp;utxo['extra']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(info)&nbsp;==&nbsp;type(u''):&nbsp;info&nbsp;=&nbsp;str(info)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(info)&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;'extra'&nbsp;in&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'$$$'&nbsp;not&nbsp;in&nbsp;info:&nbsp;raise&nbsp;Exception("signature&nbsp;of&nbsp;SRC20&nbsp;token&nbsp;is&nbsp;not&nbsp;found")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signature&nbsp;=&nbsp;info[:info.index('$$$')]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;payload&nbsp;=&nbsp;info[info.index('$$$')+3:]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;self.verifySRCTokenUtxoPayload(payload,&nbsp;signature):&nbsp;raise&nbsp;Exception("this&nbsp;SRC20&nbsp;token&nbsp;is&nbsp;fake")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj&nbsp;=&nbsp;json.loads(payload)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;obj['utxo_id']&nbsp;!=&nbsp;utxo['id']:&nbsp;raise&nbsp;Exception("the&nbsp;id&nbsp;of&nbsp;utxo&nbsp;does&nbsp;not&nbsp;match&nbsp;the&nbsp;one&nbsp;on&nbsp;the&nbsp;token")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo['addr']&nbsp;not&nbsp;in&nbsp;self.balanceOfAddr:&nbsp;self.balanceOfAddr[utxo['addr']]&nbsp;=&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.balanceOfAddr[utxo['addr']]&nbsp;+=&nbsp;obj['tokenNum']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo['addr']&nbsp;==&nbsp;self.addr:&nbsp;self.owned_token_utxos[utxo['id']]&nbsp;=&nbsp;utxo<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;calculate_utxo(blockchain_tail):<br />&nbsp;&nbsp;&nbsp;&nbsp;starToken_contract&nbsp;=&nbsp;SRC20SmartContract(bank_address,&nbsp;bank_privkey)<br />&nbsp;&nbsp;&nbsp;&nbsp;curr_block&nbsp;=&nbsp;blockchain_tail<br />&nbsp;&nbsp;&nbsp;&nbsp;blockchain&nbsp;=&nbsp;[curr_block]<br />&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;curr_block['hash']&nbsp;!=&nbsp;session['genesis_block_hash']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;curr_block&nbsp;=&nbsp;session['blocks'][curr_block['prev']]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blockchain.append(curr_block)<br />&nbsp;&nbsp;&nbsp;&nbsp;blockchain&nbsp;=&nbsp;blockchain[::-1]<br />&nbsp;&nbsp;&nbsp;&nbsp;utxos&nbsp;=&nbsp;{}<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;block&nbsp;in&nbsp;blockchain:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;tx&nbsp;in&nbsp;block['transactions']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;input_utxo_id&nbsp;in&nbsp;tx['input']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del&nbsp;utxos[input_utxo_id]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo&nbsp;in&nbsp;tx['output']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utxos[utxo['id']]&nbsp;=&nbsp;utxo<br />&nbsp;&nbsp;&nbsp;&nbsp;starToken_contract.extractInfoFromUtxos(utxos)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;utxos,&nbsp;starToken_contract<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;calculate_balance(utxos):<br />&nbsp;&nbsp;&nbsp;&nbsp;balance&nbsp;=&nbsp;{bank_address:&nbsp;0,&nbsp;hacker_address:&nbsp;0}<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo&nbsp;in&nbsp;utxos.values():<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo['addr']&nbsp;not&nbsp;in&nbsp;balance:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;balance[utxo['addr']]&nbsp;=&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;balance[utxo['addr']]&nbsp;+=&nbsp;utxo['amount']<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;balance<br /><br />def&nbsp;verify_utxo_signature(address,&nbsp;utxo_id,&nbsp;signature):<br />&nbsp;&nbsp;&nbsp;&nbsp;try:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;rsa.verify(utxo_id,&nbsp;signature.decode('hex'),&nbsp;addr_to_pubkey(address))<br />&nbsp;&nbsp;&nbsp;&nbsp;except:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;False<br />&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />def&nbsp;append_block(block,&nbsp;difficulty=int('f'*64,&nbsp;16)):<br />&nbsp;&nbsp;&nbsp;&nbsp;has_attrs(block,&nbsp;['prev',&nbsp;'nonce',&nbsp;'transactions'])<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(block['prev'])&nbsp;==&nbsp;type(u''):&nbsp;block['prev']&nbsp;=&nbsp;str(block['prev'])<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(block['nonce'])&nbsp;==&nbsp;type(u''):&nbsp;block['nonce']&nbsp;=&nbsp;str(block['nonce'])<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;block['prev']&nbsp;!=&nbsp;find_blockchain_tail()['hash']:&nbsp;raise&nbsp;Exception("You&nbsp;do&nbsp;not&nbsp;have&nbsp;the&nbsp;dominant&nbsp;mining&nbsp;power&nbsp;so&nbsp;you&nbsp;can&nbsp;only&nbsp;submit&nbsp;tx&nbsp;to&nbsp;the&nbsp;last&nbsp;block.")<br />&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;=&nbsp;session['blocks'][block['prev']]<br />&nbsp;&nbsp;&nbsp;&nbsp;utxos,&nbsp;contract&nbsp;=&nbsp;calculate_utxo(tail)<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(block['transactions'])&nbsp;!=&nbsp;type([]):&nbsp;raise&nbsp;Exception('Please&nbsp;put&nbsp;a&nbsp;transaction&nbsp;array&nbsp;in&nbsp;the&nbsp;block')<br />&nbsp;&nbsp;&nbsp;&nbsp;new_utxo_ids&nbsp;=&nbsp;set()<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;tx&nbsp;in&nbsp;block['transactions']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;has_attrs(tx,&nbsp;['input',&nbsp;'output',&nbsp;'signature'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo&nbsp;in&nbsp;tx['output']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;has_attrs(utxo,&nbsp;['amount',&nbsp;'addr',&nbsp;'id'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo['id'])&nbsp;==&nbsp;type(u''):&nbsp;utxo['id']&nbsp;=&nbsp;str(utxo['id'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo['addr'])&nbsp;==&nbsp;type(u''):&nbsp;utxo['addr']&nbsp;=&nbsp;str(utxo['addr'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo['id'])&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;id&nbsp;of&nbsp;output&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo['id']&nbsp;in&nbsp;new_utxo_ids:&nbsp;raise&nbsp;Exception("output&nbsp;utxo&nbsp;of&nbsp;same&nbsp;id({})&nbsp;already&nbsp;exists.".format(utxo['id']))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new_utxo_ids.add(utxo['id'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo['amount'])&nbsp;!=&nbsp;type(1):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;amount&nbsp;of&nbsp;output&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo['amount']&nbsp;&lt;&nbsp;0:&nbsp;raise&nbsp;Exception("invalid&nbsp;amount&nbsp;of&nbsp;output&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo['addr'])&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;address&nbsp;of&nbsp;output&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addr_to_pubkey(utxo['addr'])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;Exception("invalid&nbsp;type&nbsp;of&nbsp;address({})".format(utxo['addr']))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utxo['hash']&nbsp;=&nbsp;hash_utxo(utxo)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;new_id&nbsp;in&nbsp;new_utxo_ids:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;new_id&nbsp;in&nbsp;utxos:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;Exception("invalid&nbsp;id&nbsp;of&nbsp;output&nbsp;utxo.&nbsp;utxo&nbsp;id({})&nbsp;exists".format(utxo_id))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(tx['input'])&nbsp;!=&nbsp;type([]):&nbsp;raise&nbsp;Exception("type&nbsp;of&nbsp;input&nbsp;utxo&nbsp;ids&nbsp;in&nbsp;tx&nbsp;should&nbsp;be&nbsp;array")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(tx['signature'])&nbsp;!=&nbsp;type([]):&nbsp;raise&nbsp;Exception("type&nbsp;of&nbsp;input&nbsp;utxo&nbsp;signatures&nbsp;in&nbsp;tx&nbsp;should&nbsp;be&nbsp;array")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx['input']&nbsp;=&nbsp;[str(i)&nbsp;if&nbsp;type(i)&nbsp;==&nbsp;type(u'')&nbsp;else&nbsp;i&nbsp;for&nbsp;i&nbsp;in&nbsp;tx['input']]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo_id&nbsp;in&nbsp;tx['input']:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(utxo_id)&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;id&nbsp;of&nbsp;input&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;utxo_id&nbsp;not&nbsp;in&nbsp;utxos:&nbsp;raise&nbsp;Exception("invalid&nbsp;id&nbsp;of&nbsp;input&nbsp;utxo.&nbsp;Input&nbsp;utxo({})&nbsp;does&nbsp;not&nbsp;exist&nbsp;or&nbsp;it&nbsp;has&nbsp;been&nbsp;consumed.".format(utxo_id))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;contract&nbsp;is&nbsp;not&nbsp;None:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'call_smart_contract'&nbsp;in&nbsp;tx:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;tx['call_smart_contract']&nbsp;==&nbsp;'buyTokens':&nbsp;contract.onCall_buyTokens(utxos,&nbsp;tx)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;tx['call_smart_contract']&nbsp;==&nbsp;'withdraw':&nbsp;contract.onCall_withdraw(tx)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tot_input&nbsp;=&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(tx['input'])&nbsp;!=&nbsp;len(tx['signature']):&nbsp;raise&nbsp;Exception("lengths&nbsp;of&nbsp;arrays&nbsp;of&nbsp;ids&nbsp;and&nbsp;signatures&nbsp;of&nbsp;input&nbsp;utxos&nbsp;should&nbsp;be&nbsp;the&nbsp;same")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx['signature']&nbsp;=&nbsp;[str(i)&nbsp;if&nbsp;type(i)&nbsp;==&nbsp;type(u'')&nbsp;else&nbsp;i&nbsp;for&nbsp;i&nbsp;in&nbsp;tx['signature']]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;utxo_id,&nbsp;signature&nbsp;in&nbsp;zip(tx['input'],&nbsp;tx['signature']):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utxo&nbsp;=&nbsp;utxos[utxo_id]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;type(signature)&nbsp;!=&nbsp;type(''):&nbsp;raise&nbsp;Exception("unknown&nbsp;type&nbsp;of&nbsp;signature&nbsp;of&nbsp;input&nbsp;utxo")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;not&nbsp;verify_utxo_signature(utxo['addr'],&nbsp;utxo_id,&nbsp;signature):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;Exception("Signature&nbsp;of&nbsp;input&nbsp;utxo&nbsp;is&nbsp;not&nbsp;valid.&nbsp;You&nbsp;are&nbsp;not&nbsp;the&nbsp;owner&nbsp;of&nbsp;this&nbsp;input&nbsp;utxo({})!".format(utxo_id))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tot_input&nbsp;+=&nbsp;utxo['amount']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;del&nbsp;utxos[utxo_id]<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tot_output&nbsp;=&nbsp;sum([utxo['amount']&nbsp;for&nbsp;utxo&nbsp;in&nbsp;tx['output']])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;tot_output&nbsp;&gt;&nbsp;tot_input:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;Exception("You&nbsp;don't&nbsp;have&nbsp;enough&nbsp;amount&nbsp;of&nbsp;StarCoins&nbsp;in&nbsp;the&nbsp;input&nbsp;utxo!&nbsp;{}/{}".format(tot_input,&nbsp;tot_output))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tx['hash']&nbsp;=&nbsp;hash_tx(tx)<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;block&nbsp;=&nbsp;create_block(block['prev'],&nbsp;block['nonce'],&nbsp;block['transactions'])<br />&nbsp;&nbsp;&nbsp;&nbsp;block_hash&nbsp;=&nbsp;int(block['hash'],&nbsp;16)<br />&nbsp;&nbsp;&nbsp;&nbsp;#We&nbsp;are&nbsp;users&nbsp;in&nbsp;this&nbsp;challenge,&nbsp;so&nbsp;leave&nbsp;the&nbsp;Proof-of-Work&nbsp;thing&nbsp;to&nbsp;the&nbsp;non-existent&nbsp;miners<br />&nbsp;&nbsp;&nbsp;&nbsp;#if&nbsp;block_hash&nbsp;&gt;&nbsp;difficulty:&nbsp;raise&nbsp;Exception('Please&nbsp;provide&nbsp;a&nbsp;valid&nbsp;Proof-of-Work')<br />&nbsp;&nbsp;&nbsp;&nbsp;block['height']&nbsp;=&nbsp;tail['height']+1<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;len(session['blocks'])&nbsp;&gt;&nbsp;10:&nbsp;raise&nbsp;Exception('The&nbsp;blockchain&nbsp;is&nbsp;too&nbsp;long.&nbsp;Use&nbsp;./reset&nbsp;to&nbsp;reset&nbsp;the&nbsp;blockchain')<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;block['hash']&nbsp;in&nbsp;session['blocks']:&nbsp;raise&nbsp;Exception('A&nbsp;same&nbsp;block&nbsp;is&nbsp;already&nbsp;in&nbsp;the&nbsp;blockchain')<br />&nbsp;&nbsp;&nbsp;&nbsp;session['blocks'][block['hash']]&nbsp;=&nbsp;block<br />&nbsp;&nbsp;&nbsp;&nbsp;session.modified&nbsp;=&nbsp;True<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;init():<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'blocks'&nbsp;not&nbsp;in&nbsp;session:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session['blocks']&nbsp;=&nbsp;{}<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;At&nbsp;first,&nbsp;the&nbsp;bank&nbsp;issued&nbsp;some&nbsp;StarCoins,&nbsp;and&nbsp;give&nbsp;you&nbsp;100<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;currency_issued&nbsp;=&nbsp;create_output_utxo(bank_address,&nbsp;200)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;airdrop&nbsp;=&nbsp;create_output_utxo(hacker_address,&nbsp;100)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genesis_transaction&nbsp;=&nbsp;create_tx([],&nbsp;[currency_issued,&nbsp;airdrop])&nbsp;#&nbsp;create&nbsp;StarCoins&nbsp;from&nbsp;nothing<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genesis_block&nbsp;=&nbsp;create_block(EMPTY_HASH,&nbsp;'The&nbsp;Times&nbsp;03/Jan/2009&nbsp;Chancellor&nbsp;on&nbsp;brink&nbsp;of&nbsp;second&nbsp;bailout&nbsp;for&nbsp;bank',&nbsp;[genesis_transaction])<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session['genesis_block_hash']&nbsp;=&nbsp;genesis_block['hash']<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;genesis_block['height']&nbsp;=&nbsp;0<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;session['blocks'][genesis_block['hash']]&nbsp;=&nbsp;genesis_block<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />def&nbsp;get_balance_of_all():<br />&nbsp;&nbsp;&nbsp;&nbsp;init()<br />&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;=&nbsp;find_blockchain_tail()<br />&nbsp;&nbsp;&nbsp;&nbsp;utxos,&nbsp;contract&nbsp;=&nbsp;calculate_utxo(tail)<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;calculate_balance(utxos),&nbsp;utxos,&nbsp;tail,&nbsp;contract<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />@app.route(url_prefix+'/')<br />def&nbsp;homepage():<br />&nbsp;&nbsp;&nbsp;&nbsp;announcement&nbsp;=&nbsp;''<br />&nbsp;&nbsp;&nbsp;&nbsp;balance,&nbsp;utxos,&nbsp;_,&nbsp;contract&nbsp;=&nbsp;get_balance_of_all()<br />&nbsp;&nbsp;&nbsp;&nbsp;genesis_block_info&nbsp;=&nbsp;'hash&nbsp;of&nbsp;genesis&nbsp;block:&nbsp;'&nbsp;+&nbsp;session['genesis_block_hash']<br />&nbsp;&nbsp;&nbsp;&nbsp;addr_info&nbsp;=&nbsp;'the&nbsp;bank\'s&nbsp;addr:&nbsp;'&nbsp;+&nbsp;bank_address&nbsp;+&nbsp;',&nbsp;your&nbsp;addr:&nbsp;'&nbsp;+&nbsp;hacker_address&nbsp;+&nbsp;',&nbsp;your&nbsp;privkey:&nbsp;'&nbsp;+&nbsp;pickle.dumps(hacker_privkey).encode('hex')<br />&nbsp;&nbsp;&nbsp;&nbsp;balance_info&nbsp;=&nbsp;'StarCoins&nbsp;balance&nbsp;of&nbsp;all&nbsp;addresses:&nbsp;'&nbsp;+&nbsp;json.dumps(balance)<br />&nbsp;&nbsp;&nbsp;&nbsp;starcoins_utxo_info&nbsp;=&nbsp;'All&nbsp;utxos:&nbsp;'&nbsp;+&nbsp;json.dumps(utxos)<br />&nbsp;&nbsp;&nbsp;&nbsp;startokens_info&nbsp;=&nbsp;'StarTokens&nbsp;balance&nbsp;of&nbsp;all&nbsp;addresses:&nbsp;'&nbsp;+&nbsp;json.dumps(contract.balanceOfAddr)<br />&nbsp;&nbsp;&nbsp;&nbsp;blockchain_info&nbsp;=&nbsp;'Blockchain&nbsp;Explorer:&nbsp;'&nbsp;+&nbsp;json.dumps(session['blocks'])<br />&nbsp;&nbsp;&nbsp;&nbsp;view_source_code_link&nbsp;=&nbsp;"&lt;a&nbsp;href='source_code'&gt;View&nbsp;source&nbsp;code&lt;/a&gt;"<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;announcement+('.&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;\r\n\r\n'.join([view_source_code_link,&nbsp;genesis_block_info,&nbsp;addr_info,&nbsp;balance_info,&nbsp;starcoins_utxo_info,&nbsp;startokens_info,&nbsp;blockchain_info]))<br />&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />DIFFICULTY&nbsp;=&nbsp;int('00000'&nbsp;+&nbsp;'f'&nbsp;*&nbsp;59,&nbsp;16)<br />@app.route(url_prefix+'/create_block',&nbsp;methods=['POST'])<br />def&nbsp;create_block_api():<br />&nbsp;&nbsp;&nbsp;&nbsp;init()<br />&nbsp;&nbsp;&nbsp;&nbsp;try:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;block&nbsp;=&nbsp;json.loads(request.data)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;append_block(block,&nbsp;DIFFICULTY)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;=&nbsp;'transaction&nbsp;finished.'<br />&nbsp;&nbsp;&nbsp;&nbsp;except&nbsp;Exception,&nbsp;e:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;str(e)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;balance,&nbsp;utxos,&nbsp;tail,&nbsp;contract&nbsp;=&nbsp;get_balance_of_all()<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;balance[hacker_address]&nbsp;==&nbsp;200:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msg&nbsp;+=&nbsp;'&nbsp;Congratulations~&nbsp;'&nbsp;+&nbsp;FLAG()<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;msg<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />#&nbsp;if&nbsp;you&nbsp;mess&nbsp;up&nbsp;the&nbsp;blockchain,&nbsp;use&nbsp;this&nbsp;to&nbsp;reset&nbsp;the&nbsp;blockchain.<br />@app.route(url_prefix+'/reset')<br />def&nbsp;reset_blockchain():<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'blocks'&nbsp;in&nbsp;session:&nbsp;del&nbsp;session['blocks']<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;'genesis_block_hash'&nbsp;in&nbsp;session:&nbsp;del&nbsp;session['genesis_block_hash']<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;'reset.'<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />@app.route(url_prefix+'/source_code')<br />def&nbsp;show_source_code():<br />&nbsp;&nbsp;&nbsp;&nbsp;source&nbsp;=&nbsp;open('serve.py',&nbsp;'r')<br />&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;=&nbsp;''<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;line&nbsp;in&nbsp;source:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;=&nbsp;line.decode('utf8',&nbsp;'ignore')<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;+=&nbsp;line.replace('&amp;','&amp;amp;').replace('\t',&nbsp;'&amp;nbsp;'*4).replace('&nbsp;','&amp;nbsp;').replace('&lt;',&nbsp;'&amp;lt;').replace('&gt;','&amp;gt;').replace('\n',&nbsp;'&lt;br&nbsp;/&gt;')<br />&nbsp;&nbsp;&nbsp;&nbsp;source.close()<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;html<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />if&nbsp;__name__&nbsp;==&nbsp;'__main__':<br />&nbsp;&nbsp;&nbsp;&nbsp;app.run(debug=False,&nbsp;host='0.0.0.0',&nbsp;port=10012)<br /><br /><br />